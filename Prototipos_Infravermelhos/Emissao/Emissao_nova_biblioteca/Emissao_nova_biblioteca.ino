/*
 * autor: JOSEPH DREAM
 * 2020/01/17
 * website: https://josephdream.tech/
 *   
 */
#include <IRLibSendBase.h>    //We need the base code
#include <IRLib_HashRaw.h>    //Only use raw sender
#define IR_SEND_PWM_PIN 9 
IRsendRaw mySender;


#define RAW_DATA_LEN 60
uint16_t rawData[RAW_DATA_LEN]={
	3226, 9850, 470, 1606, 490, 566, 474, 570, 
	466, 558, 470, 1594, 466, 562, 470, 558, 
	470, 562, 466, 562, 466, 562, 470, 586, 
	442, 546, 490, 562, 470, 562, 466, 562, 
	470, 586, 442, 562, 466, 1590, 470, 546, 
	490, 1598, 470, 558, 470, 1598, 470, 550, 
	490, 550, 494, 1586, 470, 562, 470, 558, 
	470, 1590, 470, 1000};

#define RAW_DATA_LEN2 68
uint16_t rawData2[RAW_DATA_LEN2]={
	8990, 4466, 582, 542, 582, 546, 582, 542, 
	586, 1662, 586, 542, 586, 538, 582, 546, 
	582, 542, 558, 1694, 582, 1670, 554, 1694, 
	582, 542, 558, 1694, 558, 1690, 558, 1694, 
	582, 1666, 582, 1670, 582, 542, 578, 1674, 
	558, 566, 582, 542, 558, 570, 558, 566, 
	558, 570, 582, 542, 558, 1694, 554, 570, 
	558, 1694, 558, 1690, 582, 1670, 582, 1642, 
	582, 1694, 558, 1000};




uint16_t rawData3[RAW_DATA_LEN]={
	3150, 9838, 494, 1554, 498, 558, 474, 554, 
	474, 558, 474, 1590, 474, 566, 470, 586, 
	446, 558, 470, 1578, 522, 1562, 470, 566, 
	474, 582, 446, 558, 470, 558, 474, 558, 
	470, 582, 446, 558, 498, 534, 442, 602, 
	474, 554, 474, 558, 474, 1598, 474, 542, 
	494, 1614, 446, 538, 526, 530, 474, 554, 
	498, 1570, 474, 1000};

uint16_t rawData4[RAW_DATA_LEN]={
	3226, 9870, 470, 1586, 470, 566, 470, 570, 
	466, 586, 470, 1594, 470, 570, 470, 558, 
	470, 546, 470, 574, 470, 574, 470, 586, 
	470, 542, 470, 1622, 470, 558, 470, 550, 
	494, 558, 474, 558, 446, 1614, 470, 558, 
	446, 1614, 446, 582, 446, 1614, 446, 582, 
	446, 566, 494, 562, 470, 558, 446, 586, 
	470, 1570, 494, 1000};

uint16_t rawData5[RAW_DATA_LEN]={
	3278, 9838, 470, 1594, 498, 554, 478, 554, 
	474, 554, 478, 1574, 498, 562, 474, 566, 
	474, 554, 474, 554, 474, 558, 494, 534, 
	474, 554, 478, 1582, 474, 554, 478, 554, 
	474, 554, 474, 558, 474, 1590, 474, 1590, 
	502, 562, 474, 562, 474, 1594, 474, 558, 
	474, 562, 474, 570, 478, 562, 474, 1598, 
	474, 562, 478, 1000};


uint16_t rawData6[RAW_DATA_LEN]={
	3282, 9826, 526, 1570, 502, 506, 502, 554, 
	478, 554, 498, 1546, 506, 554, 498, 530, 
	498, 530, 502, 530, 498, 530, 502, 526, 
	502, 530, 502, 1566, 498, 530, 502, 518, 
	502, 554, 498, 530, 502, 1558, 502, 1558, 
	498, 530, 502, 526, 502, 1558, 498, 558, 
	474, 554, 498, 530, 502, 530, 498, 1558, 
	502, 538, 498, 1000};

uint16_t rawData7[RAW_DATA_LEN]={
	3358, 9838, 502, 1586, 474, 562, 474, 570, 
	478, 562, 474, 1586, 474, 562, 474, 558, 
	474, 554, 474, 554, 474, 558, 474, 554, 
	474, 554, 474, 1586, 474, 558, 474, 566, 
	478, 554, 474, 1586, 474, 1586, 474, 1582, 
	478, 1598, 478, 562, 474, 1598, 474, 570, 
	478, 554, 474, 1594, 474, 534, 502, 1586, 
	474, 1606, 478, 1000};

#define RAW_DATA_LEN3 230
uint16_t rawData8[RAW_DATA_LEN3]={
	9090, 4538, 558, 1714, 582, 1694, 582, 566, 
	554, 602, 554, 590, 558, 590, 582, 566, 
	562, 1718, 558, 590, 582, 1690, 574, 1698, 
	570, 586, 558, 590, 582, 566, 582, 566, 
	554, 598, 558, 1718, 554, 1718, 582, 1694, 
	554, 598, 562, 586, 582, 566, 554, 590, 
	558, 598, 558, 590, 554, 1718, 558, 590, 
	558, 598, 554, 1718, 558, 1718, 554, 590, 
	558, 598, 558, 590, 558, 590, 578, 566, 
	582, 574, 558, 590, 554, 594, 554, 590, 
	558, 598, 558, 590, 558, 590, 554, 590, 
	558, 598, 558, 586, 586, 562, 582, 566, 
	554, 594, 558, 8078, 582, 570, 554, 594, 
	574, 574, 558, 590, 558, 590, 558, 594, 
	554, 594, 562, 586, 582, 566, 582, 566, 
	562, 586, 558, 590, 558, 590, 558, 594, 
	554, 594, 558, 590, 558, 590, 558, 590, 
	558, 590, 582, 570, 578, 570, 582, 566, 
	558, 590, 566, 582, 582, 566, 558, 594, 
	578, 570, 558, 590, 566, 582, 582, 570, 
	562, 586, 554, 594, 554, 590, 558, 594, 
	558, 590, 558, 590, 558, 590, 562, 590, 
	554, 594, 554, 594, 582, 566, 562, 586, 
	558, 590, 582, 570, 578, 570, 582, 566, 
	582, 566, 558, 590, 582, 570, 554, 590, 
	562, 590, 582, 566, 582, 566, 582, 566, 
	582, 566, 582, 626, 558, 1718, 582, 562, 
	558, 1718, 554, 602, 558, 1714, 558, 1718, 
	554, 590, 582, 570, 558, 1000};

uint16_t rawData9[RAW_DATA_LEN3]={
	9074, 4538, 578, 1694, 578, 1722, 546, 594, 
	550, 602, 554, 594, 554, 590, 554, 590, 
	554, 1706, 578, 566, 578, 1718, 554, 1718, 
	554, 578, 578, 590, 554, 590, 554, 590, 
	558, 598, 554, 1718, 554, 1718, 554, 590, 
	554, 602, 554, 566, 578, 590, 554, 594, 
	550, 602, 554, 570, 578, 1694, 574, 594, 
	554, 598, 558, 590, 554, 1718, 554, 590, 
	554, 578, 578, 590, 554, 570, 574, 594, 
	554, 598, 554, 594, 550, 594, 554, 566, 
	578, 602, 554, 566, 582, 586, 554, 590, 
	558, 598, 554, 590, 558, 590, 554, 570, 
	574, 574, 578, 8046, 582, 566, 578, 594, 
	554, 594, 554, 590, 558, 590, 554, 594, 
	558, 590, 554, 594, 554, 594, 554, 590, 
	554, 598, 550, 570, 578, 594, 554, 570, 
	578, 566, 578, 594, 554, 594, 554, 570, 
	578, 570, 578, 594, 554, 594, 554, 566, 
	578, 594, 554, 594, 554, 594, 554, 594, 
	550, 594, 558, 590, 554, 594, 554, 594, 
	554, 594, 558, 590, 554, 590, 554, 574, 
	574, 594, 554, 594, 554, 570, 574, 594, 
	558, 570, 574, 594, 554, 594, 554, 594, 
	554, 570, 550, 618, 558, 590, 554, 570, 
	578, 594, 554, 594, 554, 570, 578, 594, 
	554, 590, 554, 594, 554, 594, 554, 594, 
	550, 570, 578, 654, 554, 1694, 578, 590, 
	554, 590, 558, 598, 554, 590, 554, 1694, 
	578, 570, 574, 598, 554, 1000};

void setup() {
  Serial.begin(9600);
  delay(2000); 
}


  
void loop() {

  if (Serial.available()){
    char command = Serial.read();
    if (command == 'a') {
      mySender.send(rawData,RAW_DATA_LEN,36);//Pass the buffer,length, optionally frequency
      Serial.println(F("AC Switched On"));
    }
		if (command == 'b') {
      mySender.send(rawData2,RAW_DATA_LEN2,36);//Pass the buffer,length, optionally frequency
      Serial.println(F("AC Switched On 2"));
    }
		
    if (command == 'c') {
      mySender.send(rawData3,RAW_DATA_LEN,36);//Pass the buffer,length, optionally frequency
      Serial.println(F("AC Switched On 3"));
    }

		if (command == 'd') {
      mySender.send(rawData4,RAW_DATA_LEN,36);//Pass the buffer,length, optionally frequency
      Serial.println(F("AC Switched On 4"));
    }

		if (command == 'e') {
      mySender.send(rawData5,RAW_DATA_LEN,36);//Pass the buffer,length, optionally frequency
      Serial.println(F("AC Switched On 5"));
    }
		if (command == 'f'){
			mySender.send(rawData8,RAW_DATA_LEN3,36);//Pass the buffer,length, optionally frequency
      Serial.println(F("AC Switched On 6"));
		}
		if (command == 'g'){
			mySender.send(rawData9,RAW_DATA_LEN3,36);//Pass the buffer,length, optionally frequency
      Serial.println(F("AC Switched On 7"));
		}
	}


  
}  